openapi: 3.0.0
info:
    title: Messages API
    description: This API is responsible for management of messages.
    version: 1.0.0
servers:
    - url: http://localhost:8080/v1
      description: Development Server
components:
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: token
security:
    - ApiKeyAuth: []
paths:
    /users/login:
        post:
            parameters:
                - $ref: './schemas/parameters/contentType.yaml#/parameters/json'
            security:
                - ApiKeyAuth: []
            tags:
                - Users
            summary: Login with User.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: A valid E-mail
                                    example: email@site.com.br
                                password:
                                    type: string
                                    minimum: 6
                                    example: 123456
            responses:
                '401':
                    description: Invalid Credentials
                    content:
                        application/json:
                            schema:
                              type: object
                              properties:
                                error:
                                  type: string
                                  example: Unauthorized
                                message:
                                    type: string
                                    example: Invalid Credentials
                '200':
                    description: Messages
                    content:
                        application/json:
                            schema:
                                $ref: './schemas/response/users.yaml#/components/schema'
    /users:
        get:
            parameters:
                - $ref: './schemas/parameters/token.yaml#/parameters/token_user'
            security:
                - ApiKeyAuth: []
            tags:
                - Users
            summary: Get User Information.
            responses:
                '401':
                    $ref: "./schemas/response/unautorizedError.yaml#/responses/UnauthorizedError"
                '200':
                    description: Messages
                    content:
                        application/json:
                            schema:
                                $ref: './schemas/response/users.yaml#/components/schema'
        post:
            parameters:
                - $ref: './schemas/parameters/contentType.yaml#/parameters/json'
            security:
                - ApiKeyAuth: []
            tags:
                - Users
            summary: Create a User.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: './schemas/request/users.yaml#/components/schema'
                                - required:
                                  - name
                                  - email
                                  - password
            responses:
                '201':
                    description: Create Message
                    content:
                        application/json:
                            schema:
                                $ref: './schemas/response/users.yaml#/components/schema'
        patch:
            parameters:
                - $ref: './schemas/parameters/token.yaml#/parameters/token_user'
                - $ref: './schemas/parameters/contentType.yaml#/parameters/json'
            security:
                - ApiKeyAuth: []
            tags:
                - Users
            summary: Update a User.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: './schemas/request/users.yaml#/components/schema'

            responses:
                '401':
                    $ref: "./schemas/response/unautorizedError.yaml#/responses/UnauthorizedError"
                '201':
                    description: Messages
                    content:
                        application/json:
                            schema:
                                $ref: './schemas/response/users.yaml#/components/schema'
    /messages:
        post:
            parameters:
                - $ref: './schemas/parameters/token.yaml#/parameters/token_user'
                - $ref: './schemas/parameters/contentType.yaml#/parameters/json'
            security:
                - ApiKeyAuth: []
            tags:
                - Messages
            summary: Create a message.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                              - $ref: './schemas/request/messages.yaml#/components/schema'
                              - required:
                                    - title
                                    - description
                                    - status
            responses:
                '401':
                    $ref: "./schemas/response/unautorizedError.yaml#/responses/UnauthorizedError"
                '201':
                    description: Messages
                    content:
                        application/json:
                            schema:
                               $ref: './schemas/response/messages.yaml#/components/schema'

        get:
            summary: Returns a list of messages.
            parameters:
                - in: header
                  name: page
                  schema:
                      type: integer
                      default: 1
                  description: Current Page
                - in: header
                  name: perpage
                  schema:
                      type: integer
                      default: 10
                  description: Items per Page
                - in: query
                  name: subject
                  schema:
                      type: string
                      example: PHP
                  description: Filter by Subject
                - in: query
                  name: content
                  schema:
                      type: string
                      example: PHP
                  description: Filter by Content
                - in: query
                  name: order
                  schema:
                      type: string
                      enum: [subject, content, start_date, expiration_date]
                      default: title
                      example: title
                  description: Sort by field
            tags:
                - Messages
            responses:
                '200':
                    description: Messages
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    current_page:
                                        type: integer
                                        example: 1
                                        description: Current Page
                                    data:
                                        type: array
                                        items:
                                            $ref: './schemas/response/messages.yaml#/components/schema'
                                    first_page_url:
                                        type: string
                                        example: http://localhost:8080/v1/messages?page=1
                                        description: URL First Page
                                    from:
                                        type: integer
                                        example: 11
                                        description: Number of First message
                                    last_page:
                                        type: integer
                                        example: 3
                                        description: Number of Last Page
                                    last_page_url:
                                        type: string
                                        example: http://localhost:8080/v1/messages?page=2
                                        description: URL Last Page
                                    next_page_url:
                                        type: string
                                        example: http://localhost:8080/v1/messages?page=3
                                        description: URL Next Page
                                    path:
                                        type: string
                                        example: http://localhost:8080/v1/messages
                                        description: URL
                                    per_page:
                                        type: integer
                                        example: 10
                                        description: Number itens per page
                                    prev_page_url:
                                        type: integer
                                        example: http://localhost:8080/v1/messages?page=1
                                        description: URL Next Page
                                    to:
                                        type: integer
                                        example: 20
                                        description: Number last item of page
                                    total:
                                        type: integer
                                        example: 30
                                        description: Total number itens

    /messages/{id}:
        patch:
            parameters:
                - $ref: './schemas/parameters/token.yaml#/parameters/token_user'
                - $ref: './schemas/parameters/contentType.yaml#/parameters/json'
                - $ref: './schemas/parameters/id.yaml#/parameters/messageId'
            security:
                - ApiKeyAuth: []
            tags:
                - Messages
            summary: Update a message.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: './schemas/request/messages.yaml#/components/schema'



            responses:
                '401':
                    $ref: "./schemas/response/unautorizedError.yaml#/responses/UnauthorizedError"
                '404':
                    $ref: "./schemas/response/notFound.yaml"
                '201':
                    description: Messages
                    content:
                        application/json:
                            schema:
                                $ref: './schemas/response/messages.yaml#/components/schema'
        get:
            summary: Return message by Id.
            parameters:
                - $ref: './schemas/parameters/token.yaml#/parameters/token_user'
                - $ref: './schemas/parameters/id.yaml#/parameters/messageId'
            tags:
                - Messages
            responses:
                '404':
                    $ref: "./schemas/response/notFound.yaml"
                '200':
                    description: Messages
                    content:
                        application/json:
                            schema:
                                $ref: './schemas/response/messages.yaml#/components/schema'
        delete:
            parameters:
                - $ref: './schemas/parameters/token.yaml#/parameters/token_user'
                - $ref: './schemas/parameters/id.yaml#/parameters/messageId'
            security:
                - ApiKeyAuth: []
            tags:
                - Messages
            summary: Delete a message.
            responses:
                '401':
                    $ref: "./schemas/response/unautorizedError.yaml#/responses/UnauthorizedError"
                '404':
                    $ref: "./schemas/response/notFound.yaml"
                '204':
                    $ref: './schemas/response/delete.yaml'





